#include "Illuminants.h"


namespace Illuminants {
	mat3 bradfordAdaptationMatrix(const vec3& srcWhitePoint, const vec3& dstWhitePoint) {
		const mat3 adaptationMat(
			0.8951, -0.7502, 0.0389,
			0.2664, 1.7135, -0.0685,
			-0.1614, 0.0367, 1.0296
		);
		const mat3 invAdaptationMat(
			0.9869929, 0.4323053, -0.0085287,
			-0.1470543, 0.5183603, 0.0400428,
			0.1599627, 0.0492912, 0.9684867
		);
		vec3 srcCone = adaptationMat * srcWhitePoint;
		vec3 dstCone = adaptationMat * dstWhitePoint;
		mat3 m = invAdaptationMat * mat3(dstCone.x / srcCone.x, 0, 0, 0, dstCone.y / srcCone.y, 0, 0, 0, dstCone.z / srcCone.z) * adaptationMat;
		return m;
	}
	vec3 adaptXYZScaling(const vec3& color, const vec3& srcWhitePoint, const vec3& dstWhitePoint) {
		return srcWhitePoint / dstWhitePoint * color;
	}
	vec3 adaptBradford(const vec3& color, const vec3& srcWhitePoint, const vec3& dstWhitePoint) {
		return bradfordAdaptationMatrix(srcWhitePoint, dstWhitePoint) * color;
	}
	namespace A {
		const vec3 WhitePoint(1.0985, 1.f, 0.3558);
		const float T = 2855.5;
		const spAnalyticalSampler<std::function<float(float)>> analyticSpectrum = std::make_shared<AnalyticalSampler<std::function<float(float)>>>([](float wavelength) {
			return 100.0 * blackBodyRadiance(wavelength, T) / blackBodyRadiance(560.0, T);
		});
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.0,
			780.0,
			floatList{ 0.930483,1.12821,1.35769,1.62219,1.92508,2.2698,2.65981,
				3.09861,3.58968,4.13648,4.74238,5.4107,6.14462,6.9472,7.82135,8.7698,9.7951,
				10.8996,12.0853,13.3543,14.708,16.148,17.6753,19.2907,20.995,22.7883,24.6709,
				26.6425,28.7027,30.8508,33.0859,35.4068,37.8121,40.3002,42.8693,45.5174,48.2423,
				51.0418,53.9132,56.8539,59.8611,62.932,66.0635,69.2525,72.4959,75.7903,79.1326,
				82.5193,85.947,89.4124,92.912,96.4423,100.f,103.582,107.184,110.803,114.436,
				118.08,121.731,125.386,129.043,132.697,136.346,139.988,143.618,147.235,150.836,
				154.418,157.979,161.516,165.028,168.51,171.963,175.383,178.769,182.118,185.429,
				188.701,191.931,195.118,198.261,201.359,204.409,207.411,210.365,213.268,216.12,
				218.92,221.667,224.361,227.f,229.585,232.115, 234.589, 237.008, 239.37,241.675000
			}, BorderType::CLAMP_TO_BORDER, 0.0));
	}
	namespace B {
		const float T = 4874.f;
		const spSpectrumSampler spectrum = makeSpectrumSampler(std::make_shared<GridFunction1D>(
			320.f,
			780.f,
			floatList{ 0.02,0.26,0.50,1.45,2.40,4.00,5.60,7.60,9.60,12.40,15.20,18.80,22.40,26.85,31.30,36.18,
				41.30,46.62,52.10,57.70,63.20,68.37,73.10,77.31,80.80,83.44,85.40,86.88,88.30,90.08,92.00,93.75,
				95.20,96.23,96.50,95.71,94.20,92.37,90.70,89.95,89.50,90.43,92.20,94.46,96.90,99.16,101.00,102.20,
				102.80,102.92,102.60,101.90,101.00,100.07,99.20,98.44,98.00,98.08,98.50,99.06,99.70,100.36,101.00,
				101.56,102.20,103.05,103.90,104.59,105.00,105.08,104.90,104.55,103.90,102.84,101.60,100.38,99.10,
				97.70,96.20,94.60,92.90,91.10,89.40,88.00,86.90,85.90,85.20,84.80,84.70,84.90,85.40,86.10,87.00
			}, BorderType::CLAMP_TO_BORDER, 0.0));
	}
	namespace C {
		const vec3 WhitePoint(0.9807, 1.f, 1.1822);
		const float T = 6774.f;
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.0,
			780.0,
			floatList{
				0.00,0.00,0.00,0.00,0.01,0.20,0.40,1.55,2.70,4.85,7.00,9.95,12.90,17.20,21.40,27.50,33.00,
				39.92,47.40,55.17,63.30,71.81,80.60,89.53,98.10,105.80,112.40,117.75,121.50,123.45,124.00,123.60,
				123.10,123.30,123.80,124.09,123.90,122.92,120.70,116.90,112.10,106.98,102.30,98.81,96.90,96.78,
				98.00,99.94,102.10,103.95,105.20,105.67,105.30,104.11,102.30,100.15,97.80,95.43,93.20,91.22,
				89.70,88.83,88.40,88.19,88.10,88.06,88.00,87.86,87.80,87.99,88.20,88.20,87.90,87.22,86.30,
				85.30,84.00,82.21,80.20,78.24,76.30,74.36,72.40,70.40,68.30,66.30,64.40,62.80,61.50,60.20,
				59.20,58.50,58.10,58.00,58.20,58.50,59.10
			}, BorderType::CLAMP_TO_BORDER, 0.0));
	}
	namespace E {
		const vec3 WhitePoint(1.f);
		const spColorSampler spectrum(new ConstantSampler(100.0));
	}
	namespace D50 {
		const vec3 WhitePoint(0.9642, 1.0, 0.8251);
		const float T = 5003.f;
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.0, 830.0,
			floatList{
				0.019,1.035,2.051,4.914,7.778,11.263,14.748,16.348,17.948,19.479,21.010,22.476,23.942,25.451,
				26.961,25.724,24.488,27.179,29.871,39.589,49.308,52.910,56.513,58.273,60.034,58.926,57.818,66.321,
				74.825,81.036,87.247,88.930,90.612,90.990,91.368,93.238,95.109,93.536,91.963,93.843,95.724,96.169,
				96.613,96.871,97.129,99.614,102.099,101.427,100.755,101.536,102.317,101.159,100.000,98.868,97.735,
				98.327,98.918,96.208,93.499,95.593,97.688,98.478,99.269,99.155,99.042,97.382,95.722,97.290,98.857,
				97.262,95.667,96.929,98.190,100.597,103.003,101.068,99.133,93.257,87.381,89.492,91.604,92.246,
				92.889,84.872,76.854,81.683,86.511,89.546,92.580,85.405,78.230,67.961,57.692,70.307,82.923,80.599,
				78.274,78.91,79.55,76.48,73.40,68.66,63.92,67.35,70.78,72.61,74.44
			}, BorderType::CLAMP_TO_BORDER, 0.0));
	}
	namespace D55 {
		const vec3 WhitePoint(0.9568, 1.0, 0.9214);
		const float T = 5503.f;
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.0, 830.0,
			floatList{
				0.024,1.048,2.072,6.648,11.224,15.936,20.647,22.266,23.885,25.851,27.817,29.219,30.621,32.464,
				34.308,33.446,32.584,35.335,38.087,49.518,60.949,64.751,68.554,70.065,71.577,69.746,67.914,76.760,
				85.605,91.799,97.993,99.228,100.463,100.188,99.913,101.326,102.739,100.409,98.078,99.379,100.680,
				100.688,100.695,100.341,99.987,102.098,104.210,103.156,102.102,102.535,102.968,101.484,100.000,
				98.608,97.216,97.482,97.749,94.590,91.432,92.926,94.419,94.780,95.140,94.680,94.220,92.334,90.448,
				91.389,92.330,90.592,88.854,89.586,90.317,92.133,93.950,91.953,89.956,84.817,79.677,81.258,82.840,
				83.842,84.844,77.539,70.235,74.768,79.301,82.147,84.993,78.437,71.880,62.337,52.793,64.360,75.927,
				73.872,71.818,72.38,72.94,70.14,67.35,63.04,58.73,61.86,64.99,66.65,68.31
			}, BorderType::CLAMP_TO_BORDER, 0.0));

	}
	namespace D65 {
		const vec3 WhitePoint(0.95047, 1.0, 1.08883);
		const float T = 6504.f;
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.f, 830.f,
			floatList{
			0.0341,1.6643,3.2945,11.7652,20.236,28.6447,37.0535,38.5011,39.9488,
			42.4302,44.9117,45.775,46.6383,49.3637,52.0891,51.0323,49.9755,
			52.3118,54.6482,68.7015,82.7549,87.1204,91.486,92.4589,93.4318,90.057,
			86.6823,95.7736,104.865,110.936,117.008,117.41,117.812,116.336,
			114.861,115.392,115.923,112.367,108.811,109.082,109.354,108.578,
			107.802,106.296,104.79,106.239,107.689,106.047,104.405,104.225,
			104.046,102.023,100.f,98.1671,96.3342,96.0611,95.788,92.2368,
			88.6856,89.3459,90.0062,89.8026,89.5991,88.6489,87.6987,85.4936,83.2886,
			83.4939,83.6992,81.863,80.0268,80.1207,80.2146,81.2462,82.2778,80.281,
			78.2842,74.0027,69.7213,70.6652,71.6091,72.979,74.349,67.9765,61.604,
			65.7448,69.8856,72.4863,75.087,69.3398,63.5927,55.0054,46.4182,56.6118,
			66.8054,65.0941,63.3828,63.8434,64.304,61.8779,59.4519,55.7054,51.959,
			54.6998,57.4406,58.8765,60.3125
			}));
	}
	namespace D75 {
		const vec3 WhitePoint(0.9497, 1.f, 1.2261);
		const float T = 7504.f;
		const spSpectrumSampler spectrum = std::make_shared<SpectrumSampler>(std::make_shared<GridFunction1D>(
			300.f, 830.f,
			floatList{
				0.043,2.588,5.133,17.470,29.808,42.369,54.930,56.095,57.259,60.000,62.740,62.861,62.982,66.647,
				70.312,68.507,66.703,68.333,69.963,85.946,101.929,106.911,111.894,112.346,112.798,107.945,103.092,
				112.145,121.198,127.104,133.010,132.682,132.355,129.838,127.322,127.061,126.800,122.291,117.783,
				117.186,116.589,115.146,113.702,111.181,108.659,109.552,110.445,108.367,106.289,105.596,104.904,
				102.452,100.000,97.808,95.616,94.914,94.213,90.605,86.997,87.112,87.227,86.684,86.140,84.861,
				83.581,81.164,78.747,78.587,78.428,76.614,74.801,74.562,74.324,74.873,75.422,73.499,71.576,67.714,
				63.852,64.464,65.076,66.573,68.070,62.256,56.443,60.343,64.242,66.697,69.151,63.890,58.629,50.623,
				42.617,51.985,61.352,59.838,58.324,58.73,59.14,56.94,54.73,51.32,47.92,50.42,52.92,54.23,55.54
			}, BorderType::CLAMP_TO_BORDER, 0.0));
	}
	namespace D93 {
		const float T = 9305.f;
		const vec3 WhitePoint(0.514628, 1.0, 0.762881);
	}
}
